{"version":3,"file":"classlist.js","sources":["pages/classlist/classlist.vue","../../hbulider/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2xhc3NsaXN0L2NsYXNzbGlzdC52dWU"],"sourcesContent":["<template>\n\t<view class=\"classlist\">\r\n\t\t  <!-- <custom-nav-bar title=\"分类详情\"></custom-nav-bar> -->\r\n\t\t  <view class=\"LoadLayout\" v-if=\"!classList.length && (noData===true)\"> \r\n\t\t  \t<uni-load-more status=\"loading\"></uni-load-more>\r\n\t\t  </view>\n\t\t<view class=\"content\">\r\n\t\t\t <navigator :url=\"`/pages/preview/preview?id=${item._id}`\" class=\"item\" \r\n\t\t\t v-for=\"item in classList\" :key=\"item._id\">\r\n\t\t\t\t <image :src=\"item.smallPicurl\" mode=\"aspectFill\"></image>\r\n\t\t\t </navigator>\r\n\t\t</view>\r\n\t\t<view class=\"LoadLayout\" v-if=\"classList.length===true\">\r\n\t\t\t<uni-load-more status=\"noData?'loading':'noMore'\"></uni-load-more>\r\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\n\timport {ref} from 'vue';\r\n\timport {apiGetClassList} from '@/api/apis.js';\r\n\timport {onReachBottom,onLoad} from  '@dcloudio/uni-app'\r\n\t\r\n\t\r\n\tconst queryParams= {\r\n\t\tpageNum:1,\r\n\t\tpageSize:12\r\n\t}  //之所以不用响应式是因为他不需要渲染所以可以不用ref\r\n\t\r\n\t\r\n\t\r\n\t//接收从上一个跳转页面navigator标签中传过来的参数！使用onLoad钩子函数\r\n\tonLoad((data)=>{\r\n\t\tlet {id=null,name=null} =data;\r\n\t\tqueryParams.classid=id;\r\n\t\tuni.setNavigationBarTitle({\r\n\t\t\ttitle:name\r\n\t\t})\r\n\t\tgetClassList() //为什么要放到这里执行呢？因为setup先执行 后执行onLoad函数 所以为了参数的传递：(获取到classID来调用合适的数据渲染分类页面)\r\n\t})\r\n\t\r\n\t\r\n\t//定义一个变量用于判断是否还需要请求数据\r\n\tconst noData=ref(true);\r\n\t//触底加载更多 使用onReachBottom钩子函数,改变pageNum值使其加载下一页的数据\r\n\tonReachBottom(()=>{\r\n\t\t//如果变为false 就不再触发触底 不再请求数据 因为数据已经请求完了\r\n\t\tif(noData.value===false) {\r\n\t\t\treturn\r\n\t\t};\r\n\t\tqueryParams.pageNum++,\r\n\t\tgetClassList()\r\n\t})\r\n\t\r\n\t\r\n\t//调用返回分类详情页面内容展示api接口的函数（content）\r\n    const classList=ref([])\r\n\tconst getClassList= async ()=>{\r\n\t let res=await apiGetClassList(queryParams)\r\n\t  //如果请求成功 将数据传给classList变量 \r\n\t  classList.value=[...classList.value,...res.data]//这段代码的作用是将 res.data 数组中的元素添加到 classList.value 数组中，同时保持 classList.value 的响应性\r\n\t    console.log(res.data)\r\n\t   //如果发送进来的数据长度已经不足12条：也就是比定义的pageSize12条已经不足,就把NOdata改为false 也就是不再请求接口了\r\n\t   if(queryParams.pageSize>res.data.length){\r\n\t\t   noData.value=false\r\n\t   }\r\n\t   uni.setStorageSync(\"storageClassList\",classList.value)\r\n\t   \r\n\t} \r\n\r\n\n</script>\n\n<style lang=\"scss\" scoped>\n\t       .classlist{\r\n\t\t\t   .content{\r\n\t\t\t\t   display: grid;\r\n\t\t\t\t   grid-template-columns: repeat(3,1fr);\r\n\t\t\t\t   gap: 5rpx;\r\n\t\t\t\t   padding: 5rpx;\r\n\t\t\t\t   \r\n\t\t\t   }\r\n\t\t\t   .item{\r\n\t\t\t\t   height: 440rpx;\r\n\t\t\t\t   image{\r\n\t\t\t\t\t   width: 100%;\r\n\t\t\t\t\t   height: 100%;\r\n\t\t\t\t\t   display: block;\r\n\t\t\t\t   } \r\n\t\t\t   }\r\n\t\t   }\n</style>\n","import MiniProgramPage from 'D:/hbulidproject/Wallpaper-xiami/pages/classlist/classlist.vue'\nwx.createPage(MiniProgramPage)"],"names":["onLoad","uni","ref","onReachBottom","apiGetClassList"],"mappings":";;;;;;;;;;;;;;AAwBC,UAAM,cAAa;AAAA,MAClB,SAAQ;AAAA,MACR,UAAS;AAAA,IACT;AAKDA,kBAAM,OAAC,CAAC,SAAO;AACd,UAAI,EAAC,KAAG,MAAK,OAAK,KAAI,IAAG;AACzB,kBAAY,UAAQ;AACpBC,oBAAAA,MAAI,sBAAsB;AAAA,QACzB,OAAM;AAAA,MACT,CAAG;AACD,mBAAc;AAAA,IAChB,CAAE;AAID,UAAM,SAAOC,kBAAI,IAAI;AAErBC,kBAAAA,cAAc,MAAI;AAEjB,UAAG,OAAO,UAAQ,OAAO;AACxB;AAAA,MACH;AACE,kBAAY,WACZ,aAAc;AAAA,IAChB,CAAE;AAIE,UAAM,YAAUD,cAAG,IAAC,EAAE;AACzB,UAAM,eAAc,YAAU;AAC7B,UAAI,MAAI,MAAME,SAAe,gBAAC,WAAW;AAExC,gBAAU,QAAM,CAAC,GAAG,UAAU,OAAM,GAAG,IAAI,IAAI;AAC7CH,oBAAAA,0DAAY,IAAI,IAAI;AAErB,UAAG,YAAY,WAAS,IAAI,KAAK,QAAO;AACvC,eAAO,QAAM;AAAA,MACb;AACDA,oBAAAA,MAAI,eAAe,oBAAmB,UAAU,KAAK;AAAA,IAEvD;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEF,GAAG,WAAW,eAAe;"}